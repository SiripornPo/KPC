{"ast":null,"code":"import _objectSpread from \"D:\\\\_React\\\\kpctest\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"D:\\\\_React\\\\kpctest\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport { loadState, saveState } from '../helper/saveLocalStorage';\nimport _ from 'lodash';\n\nvar TSaveState = function TSaveState(state) {\n  return _.throttle(function () {\n    return saveState(state);\n  }, 1000);\n}; // type\n\n\nvar ADD_DATA = 'ADD_DATA';\nvar REMOVE_DATA = 'REMOVE_DATA';\nvar EDIT_DATA = 'EDIT_DATA'; // action\n\nexport var addData = function addData(dispatch) {\n  return function (payload) {\n    return dispatch({\n      type: ADD_DATA,\n      payload: payload\n    });\n  };\n};\nexport var removeData = function removeData(dispatch) {\n  return function (arr_of_index) {\n    return dispatch({\n      type: REMOVE_DATA,\n      remove_data: arr_of_index\n    });\n  };\n};\nexport var editData = function editData(dispatch) {\n  return function (payload) {\n    return function (index) {\n      return dispatch({\n        type: EDIT_DATA,\n        payload: payload,\n        save_data: index\n      });\n    };\n  };\n};\nexport var initialTable = loadState();\nexport var Table = function Table() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialTable;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var type = action.type,\n      payload = action.payload,\n      save_data = action.save_data,\n      remove_data = action.remove_data;\n\n  switch (type) {\n    case ADD_DATA:\n      var afterAdd = [].concat(_toConsumableArray(state), [_objectSpread({}, payload)]);\n      saveState(afterAdd);\n      return afterAdd;\n\n    case REMOVE_DATA:\n      var afterRemove = state.filter(function (el, i) {\n        return remove_data.indexOf(i) == -1;\n      });\n      saveState(afterRemove);\n      return afterRemove;\n\n    case EDIT_DATA:\n      var afterEdit = [].concat(_toConsumableArray(state.slice(0, save_data)), [payload], _toConsumableArray(state.slice(save_data + 1)));\n      saveState(afterEdit);\n      return afterEdit;\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["D:/_React/kpctest/src/reducer/table.reducer.js"],"names":["loadState","saveState","_","TSaveState","state","throttle","ADD_DATA","REMOVE_DATA","EDIT_DATA","addData","dispatch","payload","type","removeData","arr_of_index","remove_data","editData","index","save_data","initialTable","Table","action","afterAdd","afterRemove","filter","el","i","indexOf","afterEdit","slice"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,SAApB,QAAqC,4BAArC;AACA,OAAOC,CAAP,MAAc,QAAd;;AACA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAAAC,KAAK;AAAA,SAAIF,CAAC,CAACG,QAAF,CAAW;AAAA,WAAMJ,SAAS,CAACG,KAAD,CAAf;AAAA,GAAX,EAAmC,IAAnC,CAAJ;AAAA,CAAxB,C,CACA;;;AACA,IAAME,QAAQ,GAAG,UAAjB;AACA,IAAMC,WAAW,GAAG,aAApB;AACA,IAAMC,SAAS,GAAG,WAAlB,C,CAEA;;AACA,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAAAC,QAAQ;AAAA,SAAI,UAAAC,OAAO;AAAA,WAAID,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAEN,QAAR;AAAkBK,MAAAA,OAAO,EAAPA;AAAlB,KAAD,CAAZ;AAAA,GAAX;AAAA,CAAxB;AACP,OAAO,IAAME,UAAU,GAAG,SAAbA,UAAa,CAAAH,QAAQ;AAAA,SAAI,UAAAI,YAAY;AAAA,WAAIJ,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAEL,WAAR;AAAqBQ,MAAAA,WAAW,EAAED;AAAlC,KAAD,CAAZ;AAAA,GAAhB;AAAA,CAA3B;AACP,OAAO,IAAME,QAAQ,GAAG,SAAXA,QAAW,CAAAN,QAAQ;AAAA,SAAI,UAAAC,OAAO;AAAA,WAAI,UAAAM,KAAK;AAAA,aAAIP,QAAQ,CAAC;AAAEE,QAAAA,IAAI,EAAEJ,SAAR;AAAmBG,QAAAA,OAAO,EAAPA,OAAnB;AAA4BO,QAAAA,SAAS,EAAED;AAAvC,OAAD,CAAZ;AAAA,KAAT;AAAA,GAAX;AAAA,CAAzB;AAEP,OAAO,IAAME,YAAY,GAAGnB,SAAS,EAA9B;AAEP,OAAO,IAAMoB,KAAK,GAAG,SAARA,KAAQ,GAAkC;AAAA,MAAjChB,KAAiC,uEAAzBe,YAAyB;AAAA,MAAXE,MAAW;AAAA,MAC3CT,IAD2C,GACDS,MADC,CAC3CT,IAD2C;AAAA,MACrCD,OADqC,GACDU,MADC,CACrCV,OADqC;AAAA,MAC5BO,SAD4B,GACDG,MADC,CAC5BH,SAD4B;AAAA,MACjBH,WADiB,GACDM,MADC,CACjBN,WADiB;;AAEnD,UAAQH,IAAR;AACI,SAAKN,QAAL;AACI,UAAMgB,QAAQ,gCAAOlB,KAAP,sBAAmBO,OAAnB,GAAd;AACAV,MAAAA,SAAS,CAACqB,QAAD,CAAT;AACA,aAAOA,QAAP;;AACJ,SAAKf,WAAL;AACI,UAAMgB,WAAW,GAAGnB,KAAK,CAACoB,MAAN,CAAa,UAACC,EAAD,EAAKC,CAAL;AAAA,eAAWX,WAAW,CAACY,OAAZ,CAAoBD,CAApB,KAA0B,CAAC,CAAtC;AAAA,OAAb,CAApB;AACAzB,MAAAA,SAAS,CAACsB,WAAD,CAAT;AACA,aAAOA,WAAP;;AACJ,SAAKf,SAAL;AACI,UAAMoB,SAAS,gCAAOxB,KAAK,CAACyB,KAAN,CAAY,CAAZ,EAAeX,SAAf,CAAP,IAAkCP,OAAlC,sBAA8CP,KAAK,CAACyB,KAAN,CAAYX,SAAS,GAAG,CAAxB,CAA9C,EAAf;AACAjB,MAAAA,SAAS,CAAC2B,SAAD,CAAT;AACA,aAAOA,SAAP;;AACJ;AACI,aAAOxB,KAAP;AAdR;AAgBH,CAlBM","sourcesContent":["import { loadState, saveState } from '../helper/saveLocalStorage'\r\nimport _ from 'lodash'\r\nconst TSaveState = state => _.throttle(() => saveState(state), 1000)\r\n// type\r\nconst ADD_DATA = 'ADD_DATA'\r\nconst REMOVE_DATA = 'REMOVE_DATA'\r\nconst EDIT_DATA = 'EDIT_DATA'\r\n\r\n// action\r\nexport const addData = dispatch => payload => dispatch({ type: ADD_DATA, payload })\r\nexport const removeData = dispatch => arr_of_index => dispatch({ type: REMOVE_DATA, remove_data: arr_of_index })\r\nexport const editData = dispatch => payload => index => dispatch({ type: EDIT_DATA, payload, save_data: index })\r\n\r\nexport const initialTable = loadState()\r\n\r\nexport const Table = (state = initialTable, action) => {\r\n    const { type, payload, save_data, remove_data } = action\r\n    switch (type) {\r\n        case ADD_DATA:\r\n            const afterAdd = [...state, { ...payload }]\r\n            saveState(afterAdd)\r\n            return afterAdd\r\n        case REMOVE_DATA:\r\n            const afterRemove = state.filter((el, i) => remove_data.indexOf(i) == -1)\r\n            saveState(afterRemove)\r\n            return afterRemove\r\n        case EDIT_DATA:\r\n            const afterEdit = [...state.slice(0, save_data), payload, ...state.slice(save_data + 1)]\r\n            saveState(afterEdit)\r\n            return afterEdit\r\n        default:\r\n            return state\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}