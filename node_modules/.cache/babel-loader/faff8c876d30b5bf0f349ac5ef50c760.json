{"ast":null,"code":"import _slicedToArray from \"D:\\\\_React\\\\kpctest\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"D:\\\\_React\\\\kpctest\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\_React\\\\kpctest\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\_React\\\\kpctest\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\_React\\\\kpctest\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\_React\\\\kpctest\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\_React\\\\kpctest\\\\src\\\\components\\\\ID\\\\Input.js\";\nimport React, { Component, useState, useEffect } from 'react';\nimport './input.css';\n\nvar Input =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Input, _Component);\n\n  function Input(props) {\n    var _this;\n\n    _classCallCheck(this, Input);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Input).call(this, props));\n\n    _this.componentDidMount = function () {\n      var format = _this.props.format;\n\n      _this.setState({\n        validateFormat: valid(format),\n        blockSplit: split(format),\n        allRefSize: len(split(format).filter(isNumber))\n      });\n    };\n\n    _this.nextRef = function () {\n      console.log(_this.allRef);\n\n      _this.setState(function (prev) {\n        return {\n          currentRef: prev.currentRef + 1\n        };\n      }, function () {\n        var _this$state = _this.state,\n            currentRef = _this$state.currentRef,\n            allRefSize = _this$state.allRefSize;\n\n        if (currentRef < allRefSize) {\n          _this.allRef[currentRef].focus();\n        }\n      });\n    };\n\n    _this.prevRef = function () {\n      _this.setState(function (prev) {\n        return {\n          currentRef: prev.currentRef > 0 ? prev.currentRef - 1 : 0\n        };\n      }, function () {\n        var currentRef = _this.state.currentRef;\n\n        if (currentRef > -1) {\n          _this.allRef[currentRef].focus();\n        }\n      });\n    };\n\n    _this.setValue = function (value) {\n      return _this.setState(function (prev) {\n        return {\n          value: prev.value + value\n        };\n      });\n    };\n\n    _this.shouldComponentUpdate = function (nextProps, nextState) {\n      return true;\n    };\n\n    _this.state = {\n      blockSplit: [],\n      validateFormat: false,\n      currentRef: 0,\n      allRefSize: 0,\n      value: ''\n    };\n    _this.allRef = [];\n    return _this;\n  }\n\n  _createClass(Input, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state2 = this.state,\n          validateFormat = _this$state2.validateFormat,\n          blockSplit = _this$state2.blockSplit;\n      console.log('render!!!');\n      return React.createElement(\"div\", {\n        className: this.props.containerClass,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, validateFormat ? blockSplit.map(function (el, i) {\n        return isNumber(el) ? React.createElement(Block, {\n          key: i.toString(),\n          ref: function ref(_ref) {\n            return len(_this2.allRef) == _this2.state.allRefSize ? null : _this2.allRef[len(_this2.allRef)] = _ref;\n          },\n          blockClass: _this2.props.blockClass,\n          size: len(el),\n          nextRef: _this2.nextRef,\n          prevRef: _this2.prevRef,\n          setValue: _this2.setValue,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }) : el;\n      }) : \"format error\");\n    }\n  }]);\n\n  return Input;\n}(Component);\n\nInput.defaultProps = {\n  format: \"9-9999-99999-99-9\",\n  blockClass: '',\n  containerClass: '',\n  secureText: false\n};\nexport { Input as default };\nvar Block = React.forwardRef(function (_ref2, ref) {\n  var blockClass = _ref2.blockClass,\n      size = _ref2.size,\n      nextRef = _ref2.nextRef,\n      prevRef = _ref2.prevRef,\n      setValue = _ref2.setValue;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      number = _useState2[0],\n      setNumber = _useState2[1];\n\n  useEffect(function () {\n    if (size == len(number)) {\n      setValue(number);\n      nextRef();\n    }\n  }, [number]);\n  return React.createElement(\"input\", {\n    ref: ref,\n    type: \"number\",\n    style: {\n      width: \"calc(\".concat(size, \" * 10px + 20px)\")\n    },\n    className: \"blockStyled \".concat(blockClass),\n    value: number,\n    onChange: function onChange(e) {\n      return len(number) < size || len(e.target.value) < len(number) ? setNumber(e.target.value) : null;\n    },\n    onKeyDown: function onKeyDown(e) {\n      if (e.keyCode == 8 && len(number) == 0) {\n        prevRef();\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  });\n}); // ======================================================================================\n// function\n\nfunction len(blockSize) {\n  return blockSize.length;\n}\n\nfunction split(format) {\n  return format.split(/(-|\\s)/);\n}\n\nfunction valid() {\n  var format = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var pattern = /(\\d|-|\\s)/;\n  return format.split('').every(function (el) {\n    return pattern.test(el);\n  });\n}\n\nfunction isNumber(block) {\n  return /\\d/.test(block);\n}","map":{"version":3,"sources":["D:/_React/kpctest/src/components/ID/Input.js"],"names":["React","Component","useState","useEffect","Input","props","componentDidMount","format","setState","validateFormat","valid","blockSplit","split","allRefSize","len","filter","isNumber","nextRef","console","log","allRef","prev","currentRef","state","focus","prevRef","setValue","value","shouldComponentUpdate","nextProps","nextState","containerClass","map","el","i","toString","ref","blockClass","defaultProps","secureText","Block","forwardRef","size","number","setNumber","width","e","target","keyCode","blockSize","length","pattern","every","test","block"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect } from 'react'\r\nimport './input.css'\r\nexport default class Input extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            blockSplit: [],\r\n            validateFormat: false,\r\n            currentRef: 0,\r\n            allRefSize: 0,\r\n            value: ''\r\n        }\r\n\r\n        this.allRef = []\r\n    }\r\n\r\n\r\n    static defaultProps = {\r\n        format: \"9-9999-99999-99-9\",\r\n        blockClass: '',\r\n        containerClass: '',\r\n        secureText: false,\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        const { format } = this.props\r\n        this.setState({\r\n            validateFormat: valid(format),\r\n            blockSplit: split(format),\r\n            allRefSize: len(split(format).filter(isNumber))\r\n        })\r\n    }\r\n\r\n    nextRef = () => {\r\n        console.log(this.allRef)\r\n        this.setState(prev => ({ currentRef: prev.currentRef + 1 }), () => {\r\n            const { currentRef, allRefSize } = this.state\r\n            if (currentRef < allRefSize) {\r\n                this.allRef[currentRef].focus()\r\n            }\r\n        })\r\n    }\r\n\r\n    prevRef = () => {\r\n        this.setState(prev => ({ currentRef: prev.currentRef > 0 ? prev.currentRef - 1 : 0 }), () => {\r\n            const { currentRef, } = this.state\r\n            if (currentRef > -1) {\r\n                this.allRef[currentRef].focus()\r\n            }\r\n        })\r\n    }\r\n\r\n    setValue = value => this.setState(prev => ({ value: prev.value + value }))\r\n\r\n    shouldComponentUpdate = (nextProps, nextState) => {\r\n        return true\r\n    }\r\n\r\n\r\n    render() {\r\n        const { validateFormat, blockSplit } = this.state\r\n        console.log('render!!!')\r\n        return (\r\n            <div className={this.props.containerClass} >\r\n                {\r\n                    validateFormat ? blockSplit.map((el, i) => isNumber(el) ?\r\n                        <Block\r\n                            key={i.toString()}\r\n                            ref={ref => len(this.allRef) == this.state.allRefSize ? null : this.allRef[len(this.allRef)] = ref}\r\n                            blockClass={this.props.blockClass}\r\n                            size={len(el)}\r\n                            nextRef={this.nextRef}\r\n                            prevRef={this.prevRef}\r\n                            setValue={this.setValue}\r\n                        /> : el) :\r\n                        \"format error\"\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst Block = React.forwardRef(({ blockClass, size, nextRef, prevRef, setValue }, ref) => {\r\n    const [number, setNumber] = useState('')\r\n    useEffect(() => {\r\n        if (size == len(number)) {\r\n            setValue(number)\r\n            nextRef()\r\n        }\r\n    }, [number])\r\n\r\n    return (\r\n        <input\r\n            ref={ref}\r\n            type='number'\r\n            style={{ width: `calc(${size} * 10px + 20px)` }}\r\n            className={`blockStyled ${blockClass}`}\r\n            value={number}\r\n            onChange={e => len(number) < size || len(e.target.value) < len(number) ? setNumber(e.target.value) : null}\r\n\r\n            onKeyDown={e => {\r\n                if (e.keyCode == 8 && len(number) == 0) {\r\n                    prevRef()\r\n                }\r\n            }}\r\n        />\r\n    )\r\n\r\n})\r\n// ======================================================================================\r\n// function\r\nfunction len(blockSize) {\r\n    return blockSize.length\r\n}\r\n\r\nfunction split(format) {\r\n    return format.split(/(-|\\s)/)\r\n}\r\n\r\nfunction valid(format = '') {\r\n    const pattern = /(\\d|-|\\s)/\r\n    return format.split('').every(el => pattern.test(el))\r\n}\r\n\r\nfunction isNumber(block) {\r\n    return /\\d/.test(block)\r\n}"]},"metadata":{},"sourceType":"module"}